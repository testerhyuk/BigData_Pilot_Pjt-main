1.
$ su root // Password : root
$ vi /etc/inittab

2.
$ vi /etc/sysconfig/network-scripts/ifcfg-enp0s8
DEVICE=enp0s8
HWADDR=08:00:27:17:A1:34 //가상머신의 설정 -> 네트워크 에서 각자 확인
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.56.101
NETMASK=255.255.255.0
GATEWAY=192.168.56.1
NETWORK=192.168.56.0

NAT 맥주소 08:00:27:E5:6B:FE
호스트 맥주소 08:00:27:52:AA:CB

3.
// 해당없음
$ vi /etc/udev/rules.d/70-persistent-net.rules

4. 가상머신을 한번 껐다 킨 후 root로 로그인
$ service network restart
$ ifconfig enp0s8
=> 만약 ifconfig가 먹히지 않으면, /usr/sbin 에서 $ yum install net-tools로 패키지 설치

5. ssh 설치
$ yum install openssh*
$ service sshd restart
$ schkconfig sshd on
$ reboot

6. 
$ vi /etc/hosts에 아래 내용 추가
192.168.56.101 server01.hadoop.com server01
192.168.56.102 server02.hadoop.com server02
192.168.56.103 server03.hadoop.com server03

7. 
$ vi /etc/sysconfig/network 아래 내용 추가
# Created by anaconda
NETWORKING=yes
NETWORKING IPV6=no
HOSTNAME=server01.hadoop.com

8. 
$ vi /etc/selinux/config # config 파일에서 SELINUX를 "SELINUX=disabled"로 수정. (selinux란 security-enhanced linux의 약자로서 시스템 액세스 권한을 효과적으로 제어할 수 있게하는 보안 아키텍처)

// CentOS6에서는 iptable이였으나, CentOS7에서는 firewall로 대신함
# 참고 : http://openuiz.blogspot.com/2019/09/centos-7x-port.html

// iptables(centos 6), firewalld(centos 7) 모두 방화벽을 가리키며, 방화벽 기능을 해제한다.
CentOS6 버전
/*
$ service iptables stop # iptables 중지 명령
$ chkconfig iptables off # iptables 자동 시작 중지 명령
$ chkconfig ip6tables off # ip6tables 자동 시작 중지 명령
*/

CentOS7 버전
/*
$ systemctl stop firewalld
$ systemctl disable firewalld
$ systemctl mask firewalld
*/

$ sysctl -w vm.swappiness100 # vm swappiness 사용 제어 설정
$ vi /etc/sysctl.conf # sysctl.conf 파일에서 "vm.swappiness=100" 설정을 추가
# vm.swappiness = 0 => 스왑 사용 안함
# vm.swappiness = 1 => 스왑 사용 최소화
# vm.swappiness = 60 => 기본값
# vm.swappiness = 100 => 적극적으로 스왑 사용
# 메모리 여유가 충분할 경우 vm.swappiness = 10 정도를 권고한다.


$ vi /etc/rc.local # rc.local 파일에서 아래 명령어를 추가
 echo never > /sys/kernel/mm/transparent_hugepage/enabled
 echo never > /sys/kernel/mm/transparent_hugepage/defrag
 # Linux는 메모리에 대한 관리를 Page 단위로 사용하며, 기본 page는 4096Byte(4KB)로 고정된다.
 # 이 때, 페이지의 크기를 확대하는 방법이 도입되었는데 이것이 hugepage이다.
 # 그리고 이런 hugepage를 자동 관리 해주는 기능이 transparent_hugepage(THP)이며 대용량 사이즈의 페이지를 응용프로그램이 필요로 할때 쓴다.

$ vi /etc/security/limits.conf # limits.conf 파일에서 아래의 파일 디스크립터 설정을 추가, 리눅스 사용자별 오픈 파일 최대 갯수를 늘리는 것임.
# (nofile) root 및 모든 사용자당 최대 파일 오픈 갯수를 65536개로 지정
# (nproc) root 및 모든 사용자당 최대 사용할 수 있는 프로세스의 갯수를 32768로 지정
root soft nofile 65536
root hard nofile 65536
* soft nofile 65536
* hard nofile 65536
root soft nproc 32768
root hard nproc 32768
* soft nproc 32768
* hard nproc 32768

$ reboot # 서버 리부팅

10. Server02, 03에 대해서는 01에 대한 내용을 복제한 후
$ vi /etc/sysconfig/network-scripts/ifcfg-enp0s8
HWADDR와 IPADDR만 각 Server의 IP주소와 MAC주소에 맞게 설정

$ vi /etc/hosts
server02면 server02를 localhost에, server03이라면 server03을 localhost에 지음

$ vi /etc/sysconfig/network
HOSTNAME을 서버2라면 server02.hadoop.com, 서버3라면 server03.hadoop.com으로 변경

$ vi /etc/hostname
만약, 호스트명 변경이 안됐다면 여기서 server0x 부분만 각 서버에 맞게 변경

-------------------------------------------------------------------------------

$ yum update -y // yum 최신 업데이트
$ yum install yum-utils -y // Cloudera 저장소 추가


=> pssh을 사용한 리눅스 설정. pssh는 ssh을 설정한 노드들 사이에서 동시명령을 내릴수 있는 명령어이다

------------------  swappiness 설정
[root@server01 ~]#pssh -h ~/all_hosts.txt  'sysctl -w vm.swappiness=0'
[1] 15:12:38 [SUCCESS] server01
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:39 [SUCCESS] server02
[root@server01 ~]#echo 'vm.swappiness=0' >> /etc/sysctl.conf
[root@server01 ~]#pscp.pssh -h ~/hosts.txt  /etc/sysctl.conf   /etc/sysctl.conf
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03

------------------  transparent_hugepage 설정
[root@server01 ~]# pssh -h ~/hosts_all.txt   echo never > /sys/kernel/mm/transparent_hugepage/defrag
[root@server01 ~]# pssh -h ~/hosts_all.txt   echo never > /sys/kernel/mm/transparent_hugepage/enabled
[root@server01 ~]# cat <<EOT >>  /etc/rc.local
echo never > /sys/kernel/mm/transparent_hugepage/defrag
echo never > /sys/kernel/mm/transparent_hugepage/enabled
EOT

[root@server01 ~]# pscp.pssh -h ~/hosts.txt /etc/rc.local  /etc/rc.local
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03

------------------ NTP 동기화
[root@server01 ~]# pssh -h ~/hosts_all.txt   yum install -y ntp 
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

[root@server01 ~]# cat <<EOT >>  /etc/ntp.conf 
server 0.kr.pool.ntp.org
server 3.asia.pool.ntp.org
server 2.asia.pool.ntp.org
EOT

[root@server01 ~]# pscp.pssh -h ~/hosts.txt       /etc/ntp.conf  /etc/ntp.conf 
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03

[root@server01 ~]# pssh -h ~/hosts_all.txt  service ntpd stop
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

[root@server01 ~]# pssh -h ~/hosts_all.txt  ntpdate kr.pool.ntp.org
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

[root@server01 ~]# pssh -h ~/hosts_all.txt  service ntpd start
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

[root@server01 ~]# pssh -h ~/hosts_all.txt  chkconfig ntpd on
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

------------------ file descriptor 수정

[root@server01 ~]# cat <<EOT >>   /etc/security/limits.conf
*    hard nofile 131072
*    soft nofile 131072
root hard nofile 131072
root soft nofile 131072
EOT

[root@server01 ~]# pscp.pssh -h ~/hosts.txt /etc/security/limits.conf  /etc/security/limits.conf
[1] 15:12:38 [SUCCESS] server02
[2] 15:12:38 [SUCCESS] server03
[3] 15:12:38 [SUCCESS] server01

------------------ 모든 서버 리부팅
[root@server01 ~]# pssh -h ~/hosts_all.txt  reboot

9. 클라우데라 매니저 다운

1) 레포지토리 다운
$ wget https://[hyungkeun.kim95@gmail.com]:[Kim90(*#$)]@archive.cloudera.com/p/cm6/6.3.1/redhat6/yum/cloudera-manager.repo

2) openjdk 다운
$ yum install java-1.8.0-openjdk

----------------------------------------------------------------------------------------------
11. 설치 후 (현재 클라우데라 라이선스 정책변경에 따른 클라우데라 매니저 사용불가로, 글쓴이가 제공하는 저사양 클러스터를 통해 프로젝트 진행)

1) HDFS 명령을 이용한 설치 확인
(FileZilla를 통해 샘플파일을 Server02에 업로드)
(Server02에 root계정으로 ssh 접속)

$ cd /home/bigdata

# HDFS에 Sample.txt를 tmp폴더에 저장
$ hdfs dfs -put Sample.txt /tmp

# tmp폴더 내부 확인
$ hdfs dfs -ls /tmp

# 파일크기, 파일블록크기, 복제 갯수, 소유자명, 파일명 정보를 보여줌
$ hdfs dfs -stat '%b %o %r %u %n' /tmp/Sample.txt

# 파일 이름 바꾸기
$ hdfs dfs -mv /tmp/Sample.txt /tmp.Sample2.txt

# HDFS의 파일 시스템 상태 검사
$ hdfs fsck / # 전체 크기, 파일수, 노드 수 등의 파일상태 확인

$ hdfs dfsadmin -report # 하둡 파일시스템의 기본 정보 및 통계를 보여준다

$ hdfs dfs -get /tmp/Sample2.txt # 해당 파일을 다시 /home/bigdata폴더를 가져옴

$ hdfs dfs -rm /tmp/Sample2.txt # 삭제명령. 일단 휴지통에 임시삭제되며 복구 가능

12. 스마트카 로그 시뮬레이터
(Server02에 root 계정으로 로그인한다)
$ cd /home
$ mkdir /home/pilot-pjt
$ mkdir /home/pilot-pjt/working
$ mkdir /home/pilot-pjt/working/car-batch-log
$ mkdir /home/pilot-pjt/working/driver-realtime-log
$ chmod 777 -R /home/pilot-pjt

(자바 컴파일과 실행환경을 1.8로 변경)
$ rm /usr/bin/java
$ rm /usr/bin/javac
$ ln -s /usr/java/jdk1.8.0_181-cloudera/bin/javac /usr/bin/javac
$ ln -s /usr/java/jdk1.8.0_181-cloudera/bin/java /usr/bin/java

(FileZilla를 통해 자동 로그생성 파일을 불러온다)
(Server02에 root 계정으로 ssh 접속)

$ cd /home/pilot-pjt/working
$ java -cp bigdata.smartcar.loggen-1.0.jar com.wikibook.bigdata.smartcar.loggen.DriverLogMain 20160101 10
$ cd /home/pilot-pjt/working/driver-realtime-log
$ tail -f SmartCarDriverInfo.log

(자동 로그생성 종료시)
$ ps -ef | grep smartcar.log
$ kill -0 [pid]

$ cd /home/pilot-pjt/working
$ java -cp bigdata.smartcar.loggen-1.0.jar com.wikibook.bigdata.smartcar.loggen.CarLogMain 20160101 10
$ cd /home/pilot-pjt/working/SmartCarDriverInfo
$ tail -f SmartCarStatusInfo_20160101.txt


# vim 설정
$ yum -y install vim-enhanced
$ vi /etc/profile
    alias vi='vim' # 파일 가장 마지막 아래에 내용 추가
$ source /etc/profile
$ vi ~/.vimrc
set number            " line 표시를 해줍니다.  
set ai                    " auto indent
set si                    " smart indent  
set cindent            " c style indent
set shiftwidth=4      " shift를 4칸으로 ( >, >>, <, << 등의 명령어)
set tabstop=4         " tab을 4칸으로 
set ignorecase      " 검색시 대소문자 구별하지않음
set hlsearch         " 검색시 하이라이트(색상 강조)
set expandtab       " tab 대신 띄어쓰기로
set background=dark  " 검정배경을 사용할 때, (이 색상에 맞춰 문법 하이라이트 색상
set nocompatible   " 방향키로 이동가능
set fileencodings=utf-8,euc-kr    " 파일인코딩 형식 지정
set bs=indent,eol,start    " backspace 키 사용 가능
set history=1000    " 명령어에 대한 히스토리를 1000개까지
set ruler              " 상태표시줄에 커서의 위치 표시
set nobackup      " 백업파일을 만들지 않음
set title               " 제목을 표시
set showmatch    " 매칭되는 괄호를 보여줌
set nowrap         " 자동 줄바꿈 하지 않음
set wmnu           " tab 자동완성시 가능한 목록을 보여줌
syntax on        " 문법 하이라이트 킴"
